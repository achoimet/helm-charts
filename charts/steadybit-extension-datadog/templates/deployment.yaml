apiVersion: apps/v1
kind: Deployment
metadata:
  name: steadybit-extension-datadog
  namespace: {{ .Release.Namespace }}
  labels:
  {{- range $key, $value := .Values.extraLabels }}
    {{ $key }}: {{ $value }}
  {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: steadybit-extension-datadog
  template:
    metadata:
      labels:
        app.kubernetes.io/name: steadybit-extension-datadog
    spec:
      containers:
        - image: {{ .Values.image.name }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          name: steadybit-extension-datadog
          ports:
            - containerPort: 8090
          resources:
            requests:
              memory: {{ .Values.resources.requests.memory }}
              cpu: {{ .Values.resources.requests.cpu }}
            limits:
              memory: {{ .Values.resources.limits.memory }}
              cpu: {{ .Values.resources.limits.cpu }}
          env:
            - name: STEADYBIT_LOG_LEVEL
              value: {{ .Values.logging.level | quote }}
            - name: STEADYBIT_LOG_FORMAT
              value: {{ .Values.logging.format | quote }}
            - name: STEADYBIT_EXTENSION_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "secret.name" . }}
                  key: api-key
            - name: STEADYBIT_EXTENSION_APPLICATION_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "secret.name" . }}
                  key: application-key
            - name: STEADYBIT_EXTENSION_SITE_PARAMETER
              valueFrom:
                secretKeyRef:
                  name: {{ include "secret.name" . }}
                  key: site-parameter
            - name: STEADYBIT_EXTENSION_SITE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "secret.name" . }}
                  key: site-url
            {{- if .Values.tls.server.certificate.fromSecret }}
            - name: STEADYBIT_EXTENSION_TLS_SERVER_CERT
              value: "/etc/extension/certificates/{{ .Values.tls.server.certificate.fromSecret }}/tls.crt"
            - name: STEADYBIT_EXTENSION_TLS_SERVER_KEY
              value: "/etc/extension/certificates/{{ .Values.tls.server.certificate.fromSecret }}/tls.key"
            {{- end }}
            {{- if .Values.tls.client.certificates.fromSecrets }}
            - name: STEADYBIT_EXTENSION_TLS_CLIENT_CAS
              value: "/etc/extension/certificates/{{ join "/tls.crt,/etc/extension/certificates/" .Values.tls.client.certificates.fromSecrets }}/tls.crt"
            {{- end }}
          volumeMounts:
            {{ range uniq (without (append .Values.tls.client.certificates.fromSecrets .Values.tls.server.certificate.fromSecret) nil) }}
            - name: "certificate-{{ . }}"
              mountPath: "/etc/extension/certificates/{{ . }}"
              readOnly: true
            {{ end }}
      volumes:
        {{ range without (append .Values.tls.client.certificates.fromSecrets .Values.tls.server.certificate.fromSecret) nil | uniq }}
        - name: "certificate-{{ . }}"
          secret:
            secretName: {{ . | quote }}
            optional: false
        {{ end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
      {{- toYaml . | nindent 8 }}
      {{- end }}
# Default values for steadybit-agent.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

agent:
  # agent.key -- The secret token which your agent uses to authenticate to steadybit's servers. Get it from  Get it from https://platform.steadybit.io/settings/agents/setup.
  key: null
  # agent.registerUrl -- The URL of the steadybit server your agents will connect to.
  registerUrl: https://platform.steadybit.io
  # agent.extraVolumes -- Additional volumes to which the agent container will be mounted.
  extraVolumes: []
  # agent.extraVolumeMounts -- Additional volumeMountss to which the agent container will be mounted.
  extraVolumeMounts: []
  # agent.containerRuntime -- The container runtime to be used. Valid values:
  #    docker     = uses the docker runtime.
  #                 Will mount [/var/run/docker.sock]
  #
  #    crio       = uses the cri-o runtime.
  #                 Will mount [/run/crio/crio.sock, /run/runc]
  #
  #    containerd = uses the containerd runtime.
  #                 Will mount [/run/containerd/containerd.sock, /run/containerd/runc/k8s.io]
  #
  containerRuntime: null
  # agent.containerRuntimeSocket -- use this to override the host path for the container runtime socket to mount. By default it is derived from containerRuntime
  containerRuntimeSocket: null
  # agent.runcRoot -- use this to override the host path for the runc root path to mount. By default it is derived from containerRuntime
  runcRoot: null
  # agent.port -- configure the port of the agent's HTTP endpoints (expose health and debugging information)
  port: 42899
  # agent.env -- Additional environment variables for the steadybit agent
  env: []
  # agent.extraLabels -- Additional labels
  extraLabels: {}
  # agent.leaderElection -- On kubernetes <= 1.11 you we need to use configmaps for the leader election. Valid values: leases, configmaps
  leaderElection: leases
  # agent.openshift -- Set to true if running on openshift 4.x
  openshift: false
  # agent.remoteDebug -- Set to true for starting in debug mode and exposing port 5005
  remoteDebug: false
  # agent.mode -- Set to 'aws' if you like to use the AWS Agent Mode. Valid values: default, aws
  mode: default
  # agent.livenessProbe.* -- Configuration of the Kubernetes liveness probe for the agent daemonset
  livenessProbe:
    enabled: true
    initialDelaySeconds: 300
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 5
    successThreshold: 1
  #  agent.privileged -- Set to false if you want to use the agent in non-privileged mode. It will then require SYS_BOOT, NET_ADMIN, NET_RAW, KILL and SYS_TIME
  privileged: true
  #  agent.readOnlyRootFilesystem -- Set to true if you want to use the read only root fs mode.
  readOnlyRootFilesystem: false
  # agent.proxyHost sets the STEADYBIT_AGENT_PROXY_HOST environment variable.
  proxyHost: null
  # agent.proxyPort sets the STEADYBIT_AGENT_PROXY_PORT environment variable.
  proxyPort: 80
  # agent.proxyProtocol sets the STEADYBIT_AGENT_PROXY_PROTOCOL environment variable.
  proxyProtocol: HTTP
  # agent.proxyUser sets the STEADYBIT_AGENT_PROXY_USER environment variable.
  proxyUser: null
  # agent.proxyPassword sets the STEADYBIT_AGENT_PROXY_PASSWORD environment variable.
  proxyPassword: null
  # agent.persistence.* -- persistence configuration for the agent when running in 'aws' mode. Needed for cleanup if agent is unexpectedly terminated.
  persistence:
    size: 200Mi
    accessMode: ReadWriteOnce
    storageClass: null

cluster:
  # cluster.name Represents the name that will be assigned to this Kubernetes cluster in steadybit (required with agent.mode = default)
  name: null

image:
  # image.name -- The container image to use of the steadybit agent.
  name: docker.steadybit.io/steadybit/agent
  # image.tag -- tag name of the agent container image to use.
  tag: latest
  # image.pullPolicy -- Specifies when to pull the image container.
  pullPolicy: Always
  registry: {}
  pullSecrets: []

priorityClassName:
  # priorityClassName.use -- use a priorityClassName
  use: false
  # priorityClassName.name -- The name of the priority class to be used
  name: high-priority

resources:
  requests:
    # resources.requests.memory -- The minimal amount of memory needed
    memory: "512Mi"
    # resources.requests.cpu -- The minimal amount of cpu shares needed
    cpu: "250m"
  limits:
    # resources.limits.memory -- The limit of memory to be used
    memory: "768Mi"
    # resources.limits.cpu -- The limit of cpu share to be used during its interval
    cpu: "1500m"

updateStrategy:
  # updateStrategy.type -- Which type of `updateStrategy` should be used.
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 1

rbac:
  # rbac.create -- Specifies whether RBAC resources should be created.
  create: true
  # rbac.readonly -- Specifies if Kubernetes API access should only be read only.
  readonly: false

serviceAccount:
  # serviceAccount.create -- Specifies whether a ServiceAccount should be created.
  create: true
  # serviceAccount.name -- The name of the ServiceAccount to use. If not set and `create` is true, a name is generated using the fullname template.
  name: steadybit-agent
  # serviceAccount.eksRoleArn -- The arn of the IAM role - [see aws docs](https://docs.aws.amazon.com/eks/latest/userguide/specify-service-account-role.html)
  eksRoleArn: null

# podAnnotations -- Additional annotations to be added to the agent pods.
podAnnotations: {}

podSecurityPolicy:
  # podSecurityPolicy.enable -- Specifies whether a PodSecurityPolicy should be authorized for the steadybit Agent pods.
  # Requires `rbac.create` to be `true` as well.
  enable: false

  # podSecurityPolicy.name -- The name of an existing PodSecurityPolicy you would like to authorize for the steadybit Agent pods.
  # If not set and `enable` is true, a PodSecurityPolicy will be created with a name generated using the fullname template.
  name: null

# nodeSelector -- Node labels for pod assignment
nodeSelector: {}

# tolerations -- Tolerations to influence agent pod assignment.
tolerations: []

# affinity -- Affinities to influence agent pod assignment.
affinity: {}

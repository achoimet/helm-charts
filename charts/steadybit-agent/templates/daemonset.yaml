{{- if .Values.agent.key -}}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ template "steadybit-agent.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
  {{- include "steadybit-agent.commonLabels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
  {{- include "steadybit-agent.selectorLabels" . | nindent 6 }}
  updateStrategy:
    type: {{ .Values.updateStrategy.type }}
    {{- if eq .Values.updateStrategy.type "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.updateStrategy.rollingUpdate.maxUnavailable }}
  {{- end }}
  template:
    metadata:
      labels:
        com.steadybit.agent: "true"
    {{- include "steadybit-agent.commonLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ template "steadybit-agent.serviceAccountName" . }}
      hostIPC: true
      hostNetwork: true
      hostPID: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: steadybit-agent
          image: "{{ .Values.image.name }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: STEADYBIT_AGENT_REGISTER_URL
              value: {{ .Values.agent.registerUrl | quote }}
            - name: STEADYBIT_AGENT_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "steadybit-agent.fullname" . }}
                  key: key
          securityContext:
            privileged: true
          volumeMounts:
            - name: var-run
              mountPath: /var/run
            - name: log
              mountPath: /var/log
      imagePullSecrets:
        - name: docker-steadybit-io
      volumes:
        - name: var-run
          hostPath:
            path: /var/run
        - name: log
          hostPath:
            path: /var/log
  {{- end -}}
{{- if and (eq "default" (include "validAgentMode" .)) (.Values.agent.key) -}}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ template "steadybit-agent.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "steadybit-agent.commonLabels" . | nindent 4 }}
    {{- range $key, $value := .Values.agent.extraLabels }}
    {{ $key }}: {{ $value }}
  {{- end }}
spec:
  selector:
    matchLabels:
  {{- include "steadybit-agent.selectorLabels" . | nindent 6 }}
  updateStrategy:
    type: {{ .Values.updateStrategy.type }}
    {{- if eq .Values.updateStrategy.type "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.updateStrategy.rollingUpdate.maxUnavailable }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "steadybit-agent.commonLabels" . | nindent 8 }}
        {{- range $key, $value := .Values.agent.extraLabels }}
        {{ $key }}: {{ $value }}
      {{- end }}
      annotations:
        prometheus.io/scrape: "{{ .Values.agent.prometheus.scrape }}"
        prometheus.io/path: "/prometheus"
        prometheus.io/port: "{{ .Values.agent.port }}"
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ template "steadybit-agent.serviceAccountName" . }}
      hostIPC: true
      hostNetwork: true
      hostPID: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- if .Values.priorityClassName.use }}
      priorityClassName: {{ .Values.priorityClassName.name }}
      {{- end }}
      containers:
        - name: steadybit-agent
          image: "{{ .Values.image.name }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            requests:
              memory: {{ .Values.resources.requests.memory }}
              cpu: {{ .Values.resources.requests.cpu }}
            limits:
              memory: {{ .Values.resources.limits.memory }}
              cpu: {{ .Values.resources.limits.cpu }}
          {{ if eq .Values.agent.remoteDebug true }}
          command: [ "./bin/run.sh", "debug" ]
          ports:
            - containerPort: 5005
              protocol: TCP
          {{ end }}
          {{- if .Values.agent.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              host: 127.0.0.1
              port: {{ .Values.agent.port }}
              path: /health
            initialDelaySeconds: {{ .Values.agent.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.agent.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.agent.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.agent.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.agent.livenessProbe.failureThreshold }}
          {{- end }}
          env:
            - name: STEADYBIT_AGENT_REGISTER_URL
              value: {{ .Values.agent.registerUrl | quote }}
            - name: STEADYBIT_AGENT_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "steadybit-agent.fullname" . }}
                  key: key
            - name: STEADYBIT_KUBERNETES_CLUSTER_NAME
              value: {{ .Values.cluster.name | quote }}
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: STEADYBIT_AGENT_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: STEADYBIT_AGENT_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: STEADYBIT_AGENT_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: STEADYBIT_HTTP_ENDPOINT_PORT
              value: {{ .Values.agent.port | quote }}
            - name: STEADYBIT_AGENT_MODE
              value: {{ .Values.agent.mode | quote }}
            {{- if .Values.agent.proxyHost }}
            - name: STEADYBIT_AGENT_PROXY_HOST
              value: {{ .Values.agent.proxyHost | quote }}
            - name: STEADYBIT_AGENT_PROXY_PORT
              value: {{ .Values.agent.proxyPort | quote }}
            - name: STEADYBIT_AGENT_PROXY_PROTOCOL
              value: {{ .Values.agent.proxyProtocol | quote }}
            {{- end }}
            {{- if .Values.agent.proxyUser }}
            - name: STEADYBIT_AGENT_PROXY_USER
              value: {{ .Values.agent.proxyUser | quote }}
            - name: STEADYBIT_AGENT_PROXY_PASSWORD
              value: {{ .Values.agent.proxyPassword | quote }}
            {{- end }}
            {{- if .Values.agent.readOnlyRootFilesystem }}
            - name: STEADYBIT_AGENT_WORKING_DIR
              value: /tmp/steadybit-agent
            {{- end }}
            - name: STEADYBIT_AGENT_SIDECAR_IMAGE
              value: "{{ .Values.image.name }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
            {{- if eq .Values.agent.auth.provider "oauth2" }}
            - name: STEADYBIT_AGENT_AUTH_PROVIDER
              value: OAUTH2
            - name: STEADYBIT_AGENT_AUTH_OAUTH2_CLIENT_ID
              value: {{ .Values.agent.auth.oauth2.clientId | quote }}
            - name: STEADYBIT_AGENT_AUTH_OAUTH2_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "steadybit-agent.fullname" . }}
                  key: oauth2ClientSecret
            - name: STEADYBIT_AGENT_AUTH_OAUTH2_ISSUER_URI
              value: {{ .Values.agent.auth.oauth2.issuerUri | quote }}
            {{- end }}
            {{- if and (eq .Values.agent.auth.provider "oauth2") (.Values.agent.auth.oauth2.audience) }}
            - name: STEADYBIT_AGENT_AUTH_OAUTH2_AUDIENCE
              value: {{ .Values.agent.auth.oauth2.audience | quote }}
            {{- end }}
{{- with .Values.agent.env }}
{{ toYaml . | indent 12 }}
{{- end }}
          securityContext:
            readOnlyRootFilesystem: {{ .Values.agent.readOnlyRootFilesystem }}
            privileged: {{ .Values.agent.privileged }}
          {{- if not .Values.agent.privileged }}
            capabilities:
              add: [ "SYS_BOOT", "NET_ADMIN", "NET_RAW", "KILL", "SYS_TIME" ]
          {{- end }}
          volumeMounts:
            - name: steadybit-agent-state
              mountPath: /var/lib/steadybit-agent
            - name: container-sock
              mountPath: {{ include "container-sock" . }}
            - name: cgroup-root
              mountPath: /sys/fs/cgroup
            - name: sys
              mountPath: /sys
            {{- if include "runc-root" . }}
            - name: runc-root
              mountPath: {{ include "runc-root" . }}
            {{- end }}
            {{- if .Values.agent.readOnlyRootFilesystem }}
            - name: tmp-dir
              mountPath: /tmp
            {{- end }}
            {{-  include "containerRuntimeVolumeMounts" . | nindent 12 }}
            {{-  include "volumeMountsForExtensionMutualTlsCertificates" . | nindent 12 }}
            {{- if eq (include "steadybit-agent.hasVolumeExtraCerts" . ) "true" }}
            - name: extra-certs
              mountPath: /opt/steadybit/agent/etc/extra-certs
            {{- end }}
{{- with .Values.agent.extraVolumeMounts  }}
{{ toYaml . | indent 12 }}
{{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      imagePullSecrets:
        - name: {{ template "steadybit-agent.fullname" . }}-pull-secrets
      {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
      {{- end }}
      volumes:
        - name: steadybit-agent-state
          hostPath:
            path: /var/lib/steadybit-agent
        - name: container-sock
          hostPath:
            path: {{ include "container-sock-host-path" . }}
        - name: cgroup-root
          hostPath:
            path: /sys/fs/cgroup
        - name: sys
          hostPath:
            path: /sys
        {{- if .Values.agent.readOnlyRootFilesystem }}
        - name: tmp-dir
          emptyDir:
            medium: Memory
        {{- end }}
        {{- if include "runc-root" . }}
        - name: runc-root
          hostPath:
            path: {{ include "runc-root-host-path" . }}
        {{- end }}
        {{-  include "containerRuntimeVolumes" . | nindent 8 }}
        {{-  include "volumesForExtensionMutualTlsCertificates" . | nindent 8 }}
{{- with .Values.agent.extraVolumes  }}
{{ toYaml . | indent 8 }}
{{- end }}
{{- end -}}
# Default values for steadybit-platform.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

agent:
  # -- The secret token which your agent uses to authenticate to steadybit's servers.  Get it from https://platform.steadybit.io/settings/agents/setup.
  key: null

platform:
  tenant:
    # platform.tenant.key -- Name for the tenant assigned to you.
    key: onprem
    # platform.tenant.name -- Key for the tenant assigned to you.
    name: onprem
  # platform.uiPort -- (internal) Web-UI port for the user interface.
  uiPort: 80
  # platform.websocketPort -- (internal) Websocket port for communication between platform and agents.
  websocketPort: 7878
  # platform.publicWebsocketPort -- The public port used for experiments - Use this if the agent access the websocket via ingress or a reverse proxy, that serves websocket and http traffic using the same port
  publicWebsocketPort: 80
  # platform.ingressOrigin -- Should be set to the ingress origin, e.g., https://ingress.steadybit.example.com. Will be used to construct URLs in HTTP responses to agents. This configuration will overwrite the port defined in platform.publicWebsocketPort
  ingressOrigin: null
  # -- Use this to set additional environment variables See https://docs.steadybit.io/installation-platform/3-advanced-configuration.
  env:
    - name: STEADYBIT_AUTH_PROVIDER
      value: "static"
    - name: STEADYBIT_AUTH_STATIC_0_USERNAME
      value: "admin"
    - name: STEADYBIT_AUTH_STATIC_0_PASSWORD
      value: "{noop}admin"
  # platform.extraLabels -- Additional labels
  extraLabels: {}
  service:
  ## platform.service.type -- Type for the service to use
    type: LoadBalancer
  portSplit:
    # platform.portSplit.enabled -- Can be set to "true" to change the service and ingress definition in such a way that the ports are split by purpose, i.e., an ingress and a separate egress port. This comes in handy when hardening deployments / to improve package routing.
    enabled: false

  ## platform.readinessProbe.* -- Configuration of the Kubernetes readinessProbe probe for the platform deployment
  readinessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 5
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1

  ## platform.startupProbe.* -- Configuration of the Kubernetes startup probe for the platform deployment
  startupProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 100
    successThreshold: 1

  ## platform.livenessProbe.* -- Configuration of the Kubernetes liveness probe for the platform deployment
  livenessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 5
    successThreshold: 1

  # -- Specific configuration for the database.
  database:
    enabled: true
    url: "jdbc:postgresql://postgres.steadybit-platform:5432/steadybitdb"
    name: "steadybitdb"
    port: 5432
    user: "postgres"
    password: "postgres"
    image:
      name: postgres
      tag: 11
      pullPolicy: Always
    service:
      type: NodePort

image:
  # image.name -- The container image  to use of the steadybit platform.
  name: docker.steadybit.io/steadybit/platform
  # image.tag -- Tag name of the platform container image to use.
  tag: latest
  # image.pullPolicy -- Specifies when to pull the image container.
  pullPolicy: Always
  registry: {}

serviceAccount:
  # serviceAccount.create -- Specifies whether a ServiceAccount should be created.
  create: true
  # serviceAccount.name -- The name of the ServiceAccount to use.
  # If not set and `create` is true, a name is generated using the fullname template.
  # name: steadybit-platform

# podAnnotations -- Additional annotations to be added to the platform pod.
podAnnotations: {}

# -- Ingress configuration properties
ingress:
  enabled: true
  annotations:
  hosts: []
    # - platform.steadybit.local

# nodeSelector -- Node labels for pod assignment
nodeSelector: {}

# tolerations -- Tolerations to influence platform pod assignment.
tolerations: []

# affinity -- Affinities to influence platform pod assignment.
affinity: {}
